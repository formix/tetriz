#include "layout.z80"


#data _HEAP

STR_POS_LEN     EQU     4
STR_POS         DEFS    STR_POS_LEN



#code _PROGRAM_FOOTER

; ***************************************************************************
; Sets the display attribute.
;       Param 1: Display attribute (byte)
;
;       Attributes are:
;               ATTR_RESET
;               ATTR_BRIGHT
;               ATTR_DIM
;               ATTR_UNDERSCORE
;               ATTR_BLINK
;               ATTR_REVERSE
;               ATTR_HIDDEN
; ***************************************************************************
SET_ATTRIBUTE:  _GETP   HL,0
                LD      A,ESC
                CALL    OUTA
                LD      A,"["
                CALL    OUTA
                LD      A,L
                CALL    OUTA
                LD      A,"m"
                CALL    OUTA
                RET



; ***************************************************************************
; Draws a line surrounded by plus signs (+-----+) at the given row, col and
; for a given length.
;       Param 1: row (byte)
;       Param 2: col (byte)
;       Param 3: length (byte)
; ***************************************************************************
DRAW_LINE:      _GETP   BC,0            ;B contains row, C contains col.
                _ADDRP  BC              ;Add row,col as a parameter
                _CALL   SET_POS         ;Sets the cursor position

                LD      A,"+"           ;Print the first corner
                CALL    OUTA
                _GETP   DE,1            ;get the length of the line in D
                LD      A,D             ;Load the length in A
                SUB     2
                LD      C,A             ;Initialize the counter
                LD      A,"-"
DRAW_LINE_CORE: CALL    OUTA            ;Print the core of the line
                DEC     C
                JP      NZ,DRAW_LINE_CORE       ;Loop to print the next "-".
                LD      A,"+"
                CALL    OUTA            ;Draw the second corner char.
                RET


; ***************************************************************************
; Draws a framed row (|     |) at row (D) and col (E) of length (L). Note
; that the content of the row between the pipes (|) is not erased.
;       Param 1: row (byte)
;       Param 2: col (byte)
;       Param 3: length (byte)
; ***************************************************************************
DRAW_ROW:       _GETP   HL,0            ;Load row in L and col in H
                _ADDRP  HL
                _CALL   SET_POS         ;Sets the cursor position
                LD      A,"|"
                CALL    OUTA            ;Draws the left hand pipe.
                _GETP   DE,1            ;D contains the length
                LD      A,D             ;Loads the length in A
                ADD     L               ;Add the length to the col
                DEC     A               ;Substract 1 (for the first pipes)
                LD      L,A             ;Put the right pipe col value in L
                _ADDRP  HL 
                _CALL   SET_POS         ;Sets the cursor position to (b,E+L-1).
                LD      A,"|"
                CALL    OUTA            ;Draws the right hand pipe.
                RET



; ***************************************************************************
; Draws a rectangle at row (D) and col (E) of height (H) and length (L).
;       Param 1: row (byte)
;       Param 2: col (byte)
;       Param 3: Height (byte)
;       Param 4: length (byte)
; ***************************************************************************
DRAW_RECT:
                _GETP   HL,0            ;Load height in D and length in E
                _GETP   BC,1            ;Load col in H and row in L
                LD      D,L
                _ADDRP  DE              ;D = length, E ignored
                _ADDRP  BC              ;B = row, C = col
                _CALL   DRAW_LINE
DRAW_RECT_ROW:
                DEC     H               ;reduce the height by 1
                JR      Z,DRAW_RECT_LAST_LINE
                _ADDRP  DE              ;D = length, E ignored
                INC     B               ;move to the next row
                _ADDRP  BC              ;B = row, C = col
                _CALL   DRAW_ROW
                JR      DRAW_RECT_ROW
DRAW_RECT_LAST_LINE:
                _ADDRP  DE              ;D = length, E ignored
                _ADDRP  BC              ;B = row, C = col
                _CALL   DRAW_LINE
                RET
        
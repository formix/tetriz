
#data _CONSOLE_UI_VARIABLES

STR_POS_LEN     EQU     4
STR_POS         DEFS    STR_POS_LEN


#code _CONSOLE_UI

; -----=== Constants ===-----
ESC             EQU 27


; -----=== Values ===-----

VT102_CLS       DEFB ESC,"[0m",27,"[2J",0
VT102_HOME      DEFB ESC,"[H",0


; -----=== Subroutines ===-----

PRINT_BOARD:
    CALL    HOME                ; Bring the cursor back to 1,1
    LD      B,BOARD_HEIGHT + 2  ; Initialize the column counter
    LD      HL,BOARD            ; Put the board address into HL
PB_PRINT_ROW:
    LD      C,BOARD_WIDTH + 2   ; Initialize the column counter
PB_PRINT_COLS:
    LD      A,'0'               ; Prepare a to convert the binary cell value to the matching character
    ADD     A,(HL)              ; Add the cell value to '0'
    AND     0b01111111          ; Mask the blocked cell bit to get a valid character.
    CALL    OUTA                ; print the character
    INC     HL                  ; Move to the next board cell
    DEC     C                   ; decrement the column count.
    JR      NZ,PB_PRINT_COLS    ; Jump to print the next cell
PB_PRINT_COLS_END:
    CALL    PRINT_ENDL          ; The row is completely printed, move to next line
    DEC     B                   ; Decrement the row counter
    JR      NZ,PB_PRINT_ROW     ; Jump to print the next row if not done yet
    RET


PRINT_STATUS:

    RET


; ***************************************************************************
; Print end of line (\r\n)
; ***************************************************************************
PRINT_ENDL:     
    LD      A,10
    CALL    OUTA
    LD      A,13
    CALL    OUTA
    RET


; ***************************************************************************
; Clear the screen and set the cursor home.
; ***************************************************************************
CLS:            
    LD      HL,VT102_CLS
    JR      PRINT

HOME:
    LD      HL,VT102_HOME
    JR      PRINT


; ***************************************************************************
; Prints the NULL terminated string pointed by the parameter HL by calling
; OUTA. OUTA is expected to be implemented in another module.
; ***************************************************************************
PRINT:
    LD      A,(HL)          ;Reads the next character
    OR      A               ;Check if that character is null.
    RET     Z               ;If the null char is reached, exit.
    CALL    OUTA            ;Print the character and 
    INC     HL              ;move to the next char.
    JR      PRINT           ;Print the next char

; ***************************************************************************
; Sets the cursor postion at B,C (row,col)
;       Param B: row
;       Param C: col
; Changes: A,B,C,D,E,H,L,IXH,IXL
; ***************************************************************************
SET_POS:        
    ;Start the VT102 sequence
    LD      A,ESC
    CALL    OUTA
    LD      A,"["
    CALL    OUTA

    ;Print the row
    PUSH    BC              ;Save the position
    LD      IXL,B           ;Put the row value in IXL
    LD      IXH,0           ;IX now contains the row value
    LD      DE,10           ;Add the base parameter
    LD      BC,STR_POS_LEN  ;Add the string buf length
    LD      HL,STR_POS      ;Add the buffer address
    CALL    ITOA            ;Convert the row value to a string
    CALL    PRINT           ;Print the string of the row value
    POP     BC              ;Restore the position in BC

    ;Print the VT102 row-col separator
    LD      A,";"
    CALL    OUTA

    ;Print the col
    LD      IXL,C           ;Put the col value in IXL
    LD      IXH,0           ;IX now contains the row value
    LD      DE,10           ;Add the base parameter
    LD      BC,STR_POS_LEN  ;Add the string buf length
    LD      HL,STR_POS      ;Add the buffer address
    CALL   ITOA            ;Convert the row value to a string
    CALL   PRINT           ;Print the string of the row value

    ;Print the VT102 set position terminal char
    LD      A,"H"
    CALL    OUTA
    RET
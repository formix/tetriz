#include "layout.z80"
#include "retroz-bios-inc.z80"

 MACRO RANDOMIZE
    LD      HL,(RANDOM_SEED)
    INC     HL
    LD      (RANDOM_SEED),HL
 ENDM

 MACRO   CPRINT &chr
    EX      AF,AF'
    LD      A,&chr
    CALL    OUTA
    EX      AF,AF'
 ENDM


#code _DATA

WELCOME     DEFB "+++ TetriZ +++",0
PRESS_START DEFB "Press any key to start...",0
START       DEFB "START!!!",0

TETROMINOS:
SHAPE1      DEFW $E400,$2620,$04E0,$8C80
SHAPE2      DEFW $E200,$2260,$08E0,$C880
SHAPE3      DEFW $C600,$2640,$0C60,$4C80
SHAPE4      DEFW $6600,$6600,$6600,$6600
SHAPE5      DEFW $6C00,$8C40,$06C0,$8C40
SHAPE6      DEFW $E800,$6220,$02E0,$8C80
SHAPE7      DEFW $0F00,$4444,$0F00,$4444



#data _HEAP

RANDOM_SEED         DEFS 2
; STRUCT_TETROMINO:
; STRUCT_TETROMINO_POS           DEFS 2
; STRUCT_TETROMINO_SHAPE         DEFS 2
; STRUCT_TETROMINO_ORIENTATION   DEFS 1
; NEXT_TETROMINOS DEFS 2




#code _PROGRAM

MAIN:

    _ADDLP  WELCOME
    _CALL   PRINT
     CALL    PRINT_ENDL
     CALL    PRINT_ENDL

    _ADDLP  PRESS_START
    _CALL   PRINT
    CALL    PRINT_ENDL
    
    CALL    START_RX_INT    ;Start listening to keyboard inputs

WAIT_START:
    RANDOMIZE
    CALL    GETCHAR
    _jrf    WAIT_START
    CALL    CLS


    ;LD      L,0
    ;CALL    DRAW_TETROMINO


GAME_LOOP:
    CALL    GETCHAR
    _jrf    GAME_LOOP
    CALL    OUTA
    JP      GAME_LOOP


; 16-bit xorshift pseudorandom number generator by John Metcalf
; 20 bytes, 86 cycles (excluding ret)
; returns   hl = pseudorandom number
; corrupts   a
; generates 16-bit pseudorandom numbers with a period of 65535
; using the xorshift method:
; hl ^= hl << 7
; hl ^= hl >> 9
; hl ^= hl << 8
; some alternative shift triplets which also perform well are:
; 6, 7, 13; 7, 9, 13; 9, 7, 13.
XRND:
  ld hl,(RANDOM_SEED)
  ld a,h
  rra
  ld a,l
  rra
  xor h
  ld h,a
  ld a,l
  rra
  ld a,h
  rra
  xor l
  ld l,a
  xor h
  ld h,a
  ld (RANDOM_SEED),hl
  ret




; ; 16 bit Parameters 
; ;   0: Tetromino address
; ;   1: Col(LB), Row(HB)
; ;   2: Color (LB)
; DRAW_TETROMINO: JR  DT_START
; DT_CURR_POS:
; DT_CURR_COL DEFS 1
; DT_CURR_ROW DEFS 1
; DT_START:
;     _GETP       BC,1
;     LD          (DT_CURR_POS),BC

;     LD          A,4
;     LD          D,A
;     LD          E,A

;     _ADDRP      BC
;     _CALL       SET_POS

;     RET






